#!/bin/bash

# Set up the prompt
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# -----------------------------
# General
# -----------------------------

setopt IGNOREEOF # Ctrl+Dでログアウトしてしまうことを防ぐ
autoload -Uz colors; colors # 色を使用
export EDITOR=nvim # デフォルトのエディター
setopt auto_pushd # cdしたときのディレクトリをディレクトリスタック(補完)に自動追加
setopt pushd_ignore_dups # ディレクトリスタックへの追加時に重複させない
setopt no_beep # ビープ音を鳴らさないように
bindkey -e # viキーバインド
setopt no_flow_control # フローコントロールを無効に
setopt extended_glob # ワイルドカード展開を使用する
setopt auto_cd # cdコマンドを省略して、ディレクトリ名のみの入力で移動
setopt auto_param_keys # カッコの対応などを自動で保管する
setopt notify # bgプロセスの状態変化を即座に知らせる
setopt print_eight_bit # 8bit文字を有効にする
setopt print_exit_value # 終了ステータスが0以外の場合にステータスを表示する
setopt mark_dirs # ファイル名の展開でディレクトリにマッチした場合末尾に/を付加する
setopt no_clobber # 上書きリダイレクトの禁止
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin # sudoの後ろでコマンド名を補完する
zstyle ':completion:*:processes' command 'ps x -o pid,s,args' # psコマンドのプロセス名補完
setopt noautoremoveslash # パスの最後のスラッシュを削除しない
setopt hash_cmds # 各コマンドが実行されるときにパスをハッシュにれる
export RSYNC_RSH=ssh # rsyncsncでsshを使用する

umask 022
ulimit -c 0


# -----------------------------
# completion
# -----------------------------

autoload -Uz compinit; compinit # モダン補完システムを使う
setopt complete_in_word # 単語の入力途中でもtab補完を有効化
setopt correct # コマンドのスペルチェックをする
setopt correct_all # コマンドライン全てのスペルチェックをする
zstyle ':completion:*' menu select # 補完の選択を楽にする
setopt list_packed # 補完候補をできるだけ詰めて表示する
setopt list_types # 補完候補にファイルの種類も表示する
export LSCOLORS=Exfxcxdxbxegedabagacad # 色の設定
export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30' # 補完時の色設定
zstyle ':completion::complete:*' use-cache true # キャッシュの利用による補完の高速化
autoload -U colors ; colors ; zstyle ':completion:*' list-colors "${LS_COLORS}" # 補完候補に色を付ける
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}' # 大文字・小文字を区別しない(大文字を入力した場合は区別する)
zstyle ':completion:*:manuals' separate-sections true # manの補完をセクション番号別に表示させる
setopt magic_equal_subst # --prefix=/usr などの = 以降でも補完

# -----------------------------
# History
# -----------------------------
HISTFILE=$HOME/.zsh-history
HISTSIZE=100000
SAVEHIST=10000000

setopt histignorealldups # ヒストリーに重複を表示しない
setopt share_history # 他のターミナルとヒストリーを共有(sharehistoryかも)
alias h='fc -lt '%F %T' 1' # historyに日付を表示
setopt hist_reduce_blanks # ヒストリに保存するときに余分なスペースを削除する
setopt inc_append_history # 履歴をすぐに追加する
setopt hist_verify # ヒストリを呼び出してから実行する間に一旦編集できる状態になる
bindkey '^R' history-incremental-pattern-search-backward # ^Rで履歴検索をするときに * でワイルドカードを使用できるようにする
bindkey "^S" history-incremental-search-forward
bindkey "^P" history-beginning-search-backward-end # ^Pを検索へ割り当て
bindkey "^N" history-beginning-search-forward-end # ^Nを検索へ割り当て

# -----------------------------
# Alias
# -----------------------------

# グローバルエイリアス
alias -g L='| less'
alias -g H='| head'
alias -g G='| grep'
alias -g GI='| grep -ri'

# エイリアス
if [[ $(command -v exa) ]]; then
  alias e='exa --icons --git --group-directories-first --color=auto'
  alias l=e
  alias ls=e
  alias ea='exa -a --icons --git --group-directories-first'
  alias la=ea
  alias ee='exa -aahl --icons --git --group-directories-first'
  alias ll=ee
  alias et='exa -T -L 3 -a -I "node_modules|.git|.cache" --icons --group-directories-first'
  alias lt=et
  alias eta='exa -T -a -I "node_modules|.git|.cache" --color=always --icons | less -r --group-directories-first'
  alias lta=eta
  alias l='clear && ls'
fi

alias du='du -h -d 1'
alias df='df -h'
alias su='su -l'

if [[ $(command -v bat) ]]; then
    alias cat=bat
fi

alias 'git diff'='git diff --color-words'
alias git status=status --short --branch
alias git logline=log --oneline --graph --decorate


if [ -e '/opt/relion3.0/' ]; then
  alias relion3=/opt/relion3.0/bin/relion
fi

if [ -e '/opt/relion4.0/' ]; then
  alias relion4=/opt/relion4.0/bin/relion
fi

# -----------------------------
# PATHなど
# -----------------------------

alias robo=`docker exec -u luna -w "/home/luna" -it RoboTech /bin/zsh`
