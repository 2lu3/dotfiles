#!/bin/zsh
# インタラクティブシェルでのみ必要な設定を書く

#--------------------------------------------------------------
#               Third-party Software Configuration
#--------------------------------------------------------------

#--------------------------------------------------------------
#               Local Configuration
#--------------------------------------------------------------

if [ -f "$Z_DOT_DIR/.zshrc.local" ]; then
    source "$Z_DOT_DIR/.zshrc.local"
fi


#--------------------------------------------------------------
#               Base Configuration
#--------------------------------------------------------------

source "$Z_RC_DIR/base.zsh"

#--------------------------------------------------------------
#               Option
#--------------------------------------------------------------

source "$Z_RC_DIR/option.zsh"

#--------------------------------------------------------------
#               Completion
#--------------------------------------------------------------

source "$Z_RC_DIR/completion.zsh"

#--------------------------------------------------------------
#               Prompt Configuration
#--------------------------------------------------------------

source "$Z_RC_DIR/prompt.zsh"

#--------------------------------------------------------------
#               Alias
#--------------------------------------------------------------

source "$Z_RC_DIR/alias.zsh"


#--------------------------------------------------------------
#               Plugin
#--------------------------------------------------------------

source "$Z_RC_DIR/plugin.zsh"

#--------------------------------------------------------------
#               Bind key
#--------------------------------------------------------------

source "$Z_RC_DIR/bind_key.zsh"



#--------------------------------------------------------------
#               Uncategorized
#--------------------------------------------------------------

# direnv
#show_virtual_env() {
#  if [[ -n "$VIRTUAL_ENV" && -n "$DIRENV_DIR" ]]; then
#    echo "($(basename $VIRTUAL_ENV))"
#  fi
#}
#export -f show_virtual_env
#PS1='$(show_virtual_env)'$PS1

# 新しいタブで同じディレクトリを開く

__vte_urlencode() (
  # This is important to make sure string manipulation is handled
  # byte-by-byte.
  LC_ALL=C
  str="$1"
  while [ -n "$str" ]; do
    safe="${str%%[!a-zA-Z0-9/:_\.\-\!\'\(\)~]*}"
    printf "%s" "$safe"
    str="${str#"$safe"}"
    if [ -n "$str" ]; then
      printf "%%%02X" "'$str"
      str="${str#?}"
    fi
  done
)

__vte_osc7 () {
  printf "\033]7;file://%s%s\007" "${HOSTNAME:-}" "$(__vte_urlencode "${PWD}")"
}

__vte_prompt_command() {
  local command=$(HISTTIMEFORMAT= history 1 | sed 's/^ *[0-9]\+ *//')
  command="${command//;/ }"
  local pwd='~'
  [ "$PWD" != "$HOME" ] && pwd=${PWD/#$HOME\//\~\/}
  printf "\033]777;notify;Command completed;%s\007\033]0;%s@%s:%s\007%s" "${command}" "${USER}" "${HOSTNAME%%.*}" "${pwd}" "$(__vte_osc7)"
}

case "$TERM" in
  xterm*|vte*)
    [ -n "$BASH_VERSION" ] && PROMPT_COMMAND="__vte_prompt_command"
    [ -n "$ZSH_VERSION"  ] && precmd_functions+=(__vte_osc7)
    ;;
esac

true
